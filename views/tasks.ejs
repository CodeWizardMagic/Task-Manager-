<%- include('partials/header', { title: 'Your Tasks', user }) %>
<link rel="stylesheet" href="/css/styles.css">

<div class="container mt-4" style="max-width: 700px;">
  <h1 class="mb-4 text-center">Your Tasks</h1>

  <div class="mb-3">
    <label for="sortTasks" class="form-label">Sort by:</label>
    <select id="sortTasks" class="form-select">
      <option value="status">Status</option>
      <option value="priority">Priority</option>
      <option value="dueDate">Due Date</option>
    </select>
  </div>

  <% if (tasks.length === 0) { %>
    <p class="text-center text-muted">No tasks yet. Click below to add one!</p>
  <% } else { %>
    <ul id="taskList" class="list-group mb-3">
      <% tasks.forEach(task => { %>
        <li class="list-group-item d-flex justify-content-between align-items-center task-item" 
            data-id="<%= task._id %>" 
            data-status="<%= task.status %>" 
            data-priority="<%= task.priority %>" 
            data-dueDate="<%= task.dueDate ? new Date(task.dueDate).toLocaleString() : '' %>">
          <div style="width: 100%;">
            <strong class="task-title" data-id="<%= task._id %>" 
              style="cursor: pointer; color: blue; font-size: 1.1em;">
              <%= task.title %>
            </strong> 
            <br>
            <small class="text-muted">
              <strong>Status:</strong> <%= task.status %> • <strong>Priority:</strong> <%= task.priority %>
            </small>
            <br>
            <% if (task.status !== 'completed') { %>
              <small class="text-muted">
                <strong>Due:</strong> <%= task.dueDate ? task.dueDate.toISOString().split('T')[0] : 'No deadline' %>  
                <% if (task.dueDate) { %>
                  <span id="timer-<%= task._id %>" class="text-danger"></span>
                <% } %>
              </small>
            <% } %>
          </div>
          <div class="btn-group">
            <a href="/tasks/edit/<%= task._id %>" class="btn btn-sm btn-outline-primary">Edit</a>
            <form action="/tasks/delete/<%= task._id %>" method="POST" style="display:inline;">
              <button type="submit" class="btn btn-sm btn-outline-danger">Delete</button>
            </form>
          </div>
        </li>
      <% }) %>
    </ul>
  <% } %>

  <a href="/tasks/new" class="btn btn-primary w-100">+ Add Task</a>
</div>
]
<div id="taskModal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <h2 id="modal-title"></h2>
    <p><strong>Description:</strong> <span id="modal-description"></span></p>
    <p><strong>Status:</strong> <span id="modal-status"></span></p>
    <p><strong>Priority:</strong> <span id="modal-priority"></span></p>
    <p><strong>Due Date:</strong> <span id="modal-dueDate"></span></p>
    <p><strong>Created At:</strong> <span id="modal-createdAt"></span></p>
  </div>
</div>

<script>
  function startCountdown(id, dueDate) {
    const timerElement = document.getElementById("timer-" + id);
    if (!timerElement) return;

    function updateTimer() {
      const now = new Date();
      const deadline = new Date(dueDate);
      const diff = deadline - now;

      if (diff <= 0) {
        timerElement.textContent = "⏳ Deadline passed!";
        timerElement.style.color = "red";
        return;
      }

      const days = Math.floor(diff / (1000 * 60 * 60 * 24));
      const hours = Math.floor((diff / (1000 * 60 * 60)) % 24);
      const minutes = Math.floor((diff / (1000 * 60)) % 60);
      const seconds = Math.floor((diff / 1000) % 60);

      timerElement.textContent = `⏳ ${days}d ${hours}h ${minutes}m ${seconds}s left`;
    }
        updateTimer();
    setInterval(updateTimer, 1000);
  }

  <% tasks.forEach(task => { %>
    <% if (task.dueDate) { %>
      startCountdown("<%= task._id %>", "<%= task.dueDate.toISOString() %>");
    <% } %>
  <% }) %>

  document.addEventListener("DOMContentLoaded", () => {
    const modal = document.getElementById("taskModal");
    const closeModal = document.querySelector(".close");
    const tasks = <%- JSON.stringify(tasks) %>;

    document.querySelectorAll(".task-title").forEach(title => {
      title.addEventListener("click", function () {
        const taskId = this.getAttribute("data-id");
        const task = tasks.find(t => t._id === taskId);

        if (task) {
          document.getElementById("modal-title").textContent = task.title;
          document.getElementById("modal-description").textContent = task.description || "No description";
          document.getElementById("modal-status").textContent = task.status;
          document.getElementById("modal-priority").textContent = task.priority;
          document.getElementById("modal-dueDate").textContent = task.dueDate ? new Date(task.dueDate).toDateString() : "No deadline";
          document.getElementById("modal-createdAt").textContent = new Date(task.createdAt).toDateString();
          modal.style.display = "flex";
        }
      });
    });

    closeModal.addEventListener("click", () => {
      modal.style.display = "none";
    });

    window.addEventListener("click", event => {
      if (event.target === modal) {
        modal.style.display = "none";
      }
    });
  });
  
  document.getElementById("sortTasks").addEventListener("change", function () {
    const criteria = this.value;
    const taskList = document.getElementById("taskList");
    const tasks = Array.from(taskList.children);

    tasks.sort((a, b) => {
      if (criteria === "status") {
        return a.getAttribute("data-status").localeCompare(b.getAttribute("data-status"));
      } else if (criteria === "priority") {
        const priorityOrder = { "high": 1, "medium": 2, "low": 3 };
        return priorityOrder[a.getAttribute("data-priority")] - priorityOrder[b.getAttribute("data-priority")];
      } else if (criteria === "dueDate") {
        return parseInt(a.getAttribute("data-dueDate")) - parseInt(b.getAttribute("data-dueDate"));
      }
    });

    tasks.forEach(task => taskList.appendChild(task));
  });
</script>

<style>
  .modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.4);
    justify-content: center;
    align-items: center;
  }

  .modal-content {
    background-color: white;
    padding: 20px;
    border-radius: 10px;
    width: 90%;
    max-width: 400px;
    text-align: left;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
    position: relative;
  }

  .close {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 20px;
    cursor: pointer;
  }

  .close:hover {
    color: red;
  }
</style>

<%- include('partials/footer') %>